function solution(n, m) {
  // 최대 공약수
  // 두개의 수의 약수 중에 공통되는 제일 큰 수를 나타낸다

  // 최소 공배수
  // 두개의 수의 배수 중에서 공통되는 제일 작은 수
  let max = 0;
  for (let i = 1; i <= m; i++) {
    if (n % i === 0 && m % i === 0) {
      max = i;
    }
  }

  let min = 0;
  for (let i = m; i <= n * m; i += m) {
    if (i % n === 0) {
      min = i;
      break;
    }
  }

  return [max, min];
}

function solution(n, m) {
  // 최대 공약수
  // 두개의 수의 약수 중에 공통되는 제일 큰 수를 나타낸다

  // 최소 공배수
  // 두개의 수의 배수 중에서 공통되는 제일 작은 수

  // 유클리드 호제법
  // 최대공약수를 구하기 위한 공식, 알고리즘
  // a, b => a를 b로 나누었을 때(a > b, 큰 수를 더 작은 수로 나누었을 때)
  // (나머지 값은 c)
  // c가 0 이라면, b가 최대공약수

  let a = m; // 큰 수
  let b = n; // 작은 수
  let c = 0; // a를 b로 나누었을 때 나머지 값이 들어온다.

  while (a % b > 0) {
    // 큰 수에 작은 수를 다시 할당
    c = a % b;
    a = b;
    b = c;
  }

  // 최소 공배수: n과 m을 곱한 값에 최대공약수를 나눠준 값

  return [b, (m * n) / b];
}
